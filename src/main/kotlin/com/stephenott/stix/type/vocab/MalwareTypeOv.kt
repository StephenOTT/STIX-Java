package com.stephenott.stix.type.vocab

class MalwareTypes(private val types: LinkedHashSet<MalwareType> = linkedSetOf()) :
    Set<MalwareType> by types {
}

class MalwareType(private val type: String) : OpenVocab {

    override fun getValue(): String {
        return type
    }

    companion object {

        const val vocabName = "malware-type-ov"

        var vocab: LinkedHashSet<String> = linkedSetOf(
            "adware", "backdoor", "bot",
            "bootkit", "ddos", "downloader",
            "dropper", "exploit-kit", "keylogger",
            "ransomware", "remote-access-trojan", "resource-exploitation",
            "rogue-security-software", "rootkit", "screen-capture",
            "spyware", "trojan", "unknown",
            "virus", "webshell", "wiper",
            "worm"
        )
            set(value) {
                require(value.isNotEmpty())
                field = value
            }
    }

    init {
        require(this.type in vocab)
    }
}